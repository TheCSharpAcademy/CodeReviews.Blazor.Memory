@using Data.Enums
@inject GamesService GamesService

<div class="h-screen flex flex-col items-center justify-center gap-6">
  <h1>Select Difficulty</h1>
  <div class="flex flex-col items-center gap-4">
    <button @onclick="() => SelectDifficulty(DifficultyLevels.Easy)" class="btn border-b-4 border-transparent hover:border-green-600 transition-all duration-200 py-1 px-4 @(GamesService.Game.Difficulty == DifficultyLevels.Easy ? "text-green-600" : "")">Easy</button>
    <button @onclick="() => SelectDifficulty(DifficultyLevels.Medium)" class="btn border-b-4 border-transparent hover:border-orange-500 transition-all duration-200 py-1 px-4 @(GamesService.Game.Difficulty == DifficultyLevels.Medium ? "text-orange-500" : "")">Medium</button>
    <button @onclick="() => SelectDifficulty(DifficultyLevels.Hard)" class="btn border-b-4 border-transparent hover:border-red-600 transition-all duration-200 py-1 px-4 @(GamesService.Game.Difficulty == DifficultyLevels.Hard ? "text-red-600" : "")">Hard</button>
  </div>
  <div class="flex items-center gap-6">
    <button @onclick="Back" type="button" class="btn primary-btn">Back</button>
    <button @onclick="Play" class="btn primary-btn">Play</button>
  </div>
</div>

@code {
  [Parameter] public EventCallback OnBack { get; set; }
  [Parameter] public EventCallback OnPlay { get; set; }

  private void SelectDifficulty(DifficultyLevels difficultyLevel)
  {
    GamesService.SetDifficulty(difficultyLevel);
  }

  private void Back()
  {
    OnBack.InvokeAsync();
  }

  private void Play()
  {
    OnPlay.InvokeAsync();
  }

}
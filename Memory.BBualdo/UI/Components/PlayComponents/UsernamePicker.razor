@inject GamesService GamesService;
@inject NavigationManager Navigation;

<div class="h-screen flex items-center justify-center flex-col gap-6">
  <h1 class="tracking-widest">Enter your username:</h1>
  <EditForm Model="@GamesService.Game" OnValidSubmit="HandleValidSubmit" FormName="UsernameForm" class="flex flex-col items-center gap-6">
    <DataAnnotationsValidator/>
    <InputText id="username" @bind-Value="GamesService.Game.Username" class="input"/>
    <ValidationMessage For="() => GamesService.Game.Username" class="text-red-500"/>
    <div class="flex items-center gap-6">
      <button @onclick="Back" type="button" class="btn primary-btn">Back</button>
      <button class="btn primary-btn">Next</button>
    </div>
  </EditForm>
</div>

@code {
  [Parameter] public EventCallback OnUsernameSet { get; set; }

  private void HandleValidSubmit()
  {
    GamesService.SetUsername(GamesService.Game.Username!);
    OnUsernameSet.InvokeAsync();
  }

  private void Back()
  {
    GamesService.ResetGame();
    Navigation.NavigateTo("..");
  }

}